openapi: 3.0.3
info:
  title: Main Service API
  version: 1.0.0
servers:
- url: /
paths:
  /users:
    post:
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersBody'
        required: true
      responses:
        "201":
          description: User created
        "400":
          description: Wrong format
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
  /users/me:
    patch:
      summary: Update user's own data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersMeBody'
        required: true
      responses:
        "200":
          description: User updated
        "400":
          description: Wrong format
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /auth:
    post:
      summary: Authenticate a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthBody'
        required: true
      responses:
        "200":
          description: |
            Successfully authenticated. The session ID is returned in a cookie named `SESSIONID`. You need to include this cookie in subsequent requests.
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: SESSIONID=abcde12345
        "400":
          description: Wrong format
        "401":
          description: Wrong credentials
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /posts:
    post:
      summary: Create a new post
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "201":
          description: Post created
        "400":
          description: Wrong format
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
    get:
      summary: Get a list of posts
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /posts/{postId}:
    get:
      summary: Get a post by ID
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
    patch:
      summary: Update a post
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Post updated
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
    delete:
      summary: Delete a post
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Post deleted
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /posts/{postId}/view:
    post:
      summary: View a post
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Post viewed
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /posts/{postId}/like:
    post:
      summary: Like a post
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Post liked
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /posts/{postId}/stats:
    get:
      summary: Get post stats
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Post stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostStats'
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /posts/top:
    get:
      summary: Get top posts
      parameters:
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
          enum: [views, likes]
      responses:
        "200":
          description: Top posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopPost'
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
  /users/top:
    get:
      summary: Get top users
      responses:
        "200":
          description: Top users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopUser'
        "401":
          description: Session ID is missing or invalid
        "5XX":
          description: Unexpected error
      security:
      - cookieAuth: []
components:
  schemas:
    AuthBody:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    UsersMeBody:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        email:
          type: string
          format: email
        phoneNumber:
          type: string
    Post:
      type: object
      properties:
        id:
          type: int64
        content:
          type: string
        userId:
          type: int64
    UsersBody:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    PostStats:
      type: object
      properties:
        id:
          type: int64
        viewCount:
          type: int64
        likeCount:
          type: int64
    TopPost:
      type: object
      properties:
        id:
          type: int64
        authorName:
          type: string
        count:
          type: int64
    TopUser:
      type: object
      properties:
        name:
          type: string
        likesCount:
          type: int64
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
  securitySchemes:
    cookieAuth:
      type: apiKey
      name: SESSIONID
      in: cookie

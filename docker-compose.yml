services:
  main_service:
    build:
      context: ./
      dockerfile: ./main_service/Dockerfile
    ports:
      - "8765:8080"
    depends_on:
      main_db:
        condition: service_started
      posts_service:
        condition: service_started
      statistics_service:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      MAIN_DB_HOST: ${MAIN_DB_HOST}
      MAIN_DB_USERNAME: ${MAIN_DB_USERNAME}
      MAIN_DB_PASSWORD: ${MAIN_DB_PASSWORD}
      MAIN_DB_NAME: ${MAIN_DB_NAME}
      POSTS_GRPC_SERVER: ${POSTS_GRPC_SERVER}
      STATISTICS_GRPC_SERVER: ${STATISTICS_GRPC_SERVER}
      KAFKA_SERVER: ${KAFKA_SERVER}

  main_db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: ${MAIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${MAIN_DB_PASSWORD}
      POSTGRES_DB: ${MAIN_DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  posts_service:
    build: ./posts_service
    depends_on:
      - posts_db
    environment:
      POSTS_DB_HOST: ${POSTS_DB_HOST}
      POSTS_DB_USERNAME: ${POSTS_DB_USERNAME}
      POSTS_DB_PASSWORD: ${POSTS_DB_PASSWORD}
      POSTS_DB_NAME: ${POSTS_DB_NAME}

  posts_db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: ${POSTS_DB_USERNAME}
      POSTGRES_PASSWORD: ${POSTS_DB_PASSWORD}
      POSTGRES_DB: ${POSTS_DB_NAME}
    volumes:
      - posts_data:/var/lib/postgresql/data

  statistics_service:
    build: ./statistics_service
    depends_on:
      statistics_db:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      STATS_DB_HOST: ${STATS_DB_HOST}
      STATS_DB_USERNAME: ${STATS_DB_USERNAME}
      STATS_DB_PASSWORD: ${STATS_DB_PASSWORD}
      KAFKA_SERVER: ${KAFKA_SERVER}

  statistics_db:
    image: yandex/clickhouse-server:latest
    environment:
      - CLICKHOUSE_USER=${STATS_DB_USERNAME}
      - CLICKHOUSE_PASSWORD=${STATS_DB_PASSWORD}
    ports:
      - "8124:8123"
    volumes:
      - clickhouse_data:/var/lib/clickhouse

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_SERVER}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

volumes:
  postgres_data:
  posts_data:
  clickhouse_data:
